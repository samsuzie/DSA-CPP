#include<stack>
class SpecialStack {
    public:
    stack<int>s;
    int mini; 
    int push(int data) {
        // for first element
        if(s.empty()){
            s.push(data);
            mini=data;
        }
        else{
            if(data<mini){
                int value = 2*data-mini;
                s.push(value);
                mini = data;
            }
            else{
                s.push(data);
            }
        }
    }

    int pop() {
       if(s.empty()){
           return -1;
       }
       int curr =s.top();
       s.pop();
       if(curr>mini){
           return curr;
       }
       else{
           int prevMini = mini;
           int value = 2*mini-curr;
           mini=value;
           return prevMini;
       }
    }

    int top() {
        if(s.empty()){
            return -1;
        }
        int curr = s.top();
        if(curr<mini){
            return mini;
        }
        else{
            return curr;
        }
    }

    int getMin() {
        if(s.empty()){
            return -1;
        }
        return mini;
    }  
};
