class Solution {
public:
    string expand_from_center(int i, int j,string &s , int n){
        while(i>=0 && j<n && s[i]==s[j]){
            i--;
            j++;
        }
        return s.substr(i+1,j-i-1);
    }
    string longestPalindrome(string s) {
        int n = s.length();
        if(n<=1){
            return s;
        }
        string max_str=s.substr(0,1);
        for(int i=0;i<n;i++){
            string odd= expand_from_center(i,i,s,n);
            string even = expand_from_center(i,i+1,s,n);
            if(odd.length()>max_str.length()){
                max_str=odd;
            }
            if(even.length()>max_str.length()){
                max_str=even;
            }
        }
        return max_str;
    }
};
