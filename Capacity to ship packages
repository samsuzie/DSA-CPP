class Solution {
public:
    int getminimum(vector<int>&weights){
        int maxi = INT_MIN;
        for(int i =0;i<weights.size();i++){
            maxi = max(maxi , weights[i]);
        }
        return maxi ;
    }
    int total(vector<int>&weights){
        int sum = 0;
        for(int i=0;i<weights.size();i++){
            sum += weights[i];
        }
        return sum;
    }
    bool possible(vector<int>&weights,int &capacity , int days){
        int daysans = 1;
        int load = 0;
        for(int i =0;i<weights.size();i++){
            if(load + weights[i]>capacity){
                daysans ++;
                load = weights[i];
            }
            else{
                load = load+weights[i];
            }
        }
        if(daysans<=days){
            return true;
        }
        else{
            return false;
        }
    }
    int shipWithinDays(vector<int>& weights, int days) {
        int low = getminimum(weights);
        int high = total(weights);
        while(low<=high){
            int mid = low+(high-low)/2;
            if(possible(weights,mid,days)){
                high = mid-1;
            }
            else{
                low = mid+1;
            }
        }
        return low;
    }
};
