 public:
   bool solve(vector<int>& arr,int n,int total){
       vector<int>curr(total+1,0);
       vector<int>next(total+1,0);
       curr[0]=1;
       next[0]=1;
       for(int index=n-1;index>=0;index--){
           for(int target=1;target<=total/2;target++){
               bool incl=0;
               if(target-arr[index]>=0){
        incl = next[target-arr[index]];
               }
        bool exc = next[target];
        
        curr[target] = incl or exc;
           }
           next = curr;
       }
       return next[total/2];
   }
    bool equalPartition(vector<int>& arr) {
        int n = arr.size();
        int total=0;
        for(int i=0;i<n;i++){
            total+=arr[i];
        }
        // odd
        if(total%2!=0){
            return 0;
        }
        int target = total/2;
        return solve(arr,n,total);
    }
