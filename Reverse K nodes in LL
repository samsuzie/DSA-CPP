class Solution {
public:
    ListNode* reverseKGroup(ListNode* head, int k) {
        // base case
        if(head==NULL){
            return NULL;
        }
        //check if there are atleast k nodes present 
        ListNode* check = head;
        for (int i = 0; i < k; ++i) {
            if (!check) return head; 
            check = check->next;
        }
        //step 1 reverse K Nodes
        ListNode* prev = NULL;
        ListNode* curr = head;
        ListNode* forward = NULL;
        int cnt = 0;
        while(curr!=NULL && cnt<k){
            forward = curr->next;
            curr->next = prev;
            prev = curr;
            curr= forward;
            cnt++;
        }
        // recursuve call
        if(forward!=NULL){
            head->next = reverseKGroup(forward , k);
        }
        return prev;
        
    }
};
