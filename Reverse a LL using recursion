#include <bits/stdc++.h>

/****************************************************************

    Following is the class structure of the LinkedListNode class:

    template <typename T>
    class LinkedListNode
    {
    public:
        T data;
        LinkedListNode<T> *next;
        LinkedListNode(T data)
        {
            this->data = data;
            this->next = NULL;
        }
    };

*****************************************************************/

// this function will return head of the reverse list
LinkedListNode<int> *reverse1(LinkedListNode<int> *head){
    // base case
    if(head == NULL || head->next == NULL){
        return head;
    }
    
    LinkedListNode<int> *smallhead = reverse1(head->next);
    head->next ->next = head;
    head->next = NULL;
    return smallhead;
}

LinkedListNode<int> *reverseLinkedList(LinkedListNode<int> *head) 
{   
    return reverse1(head);
    // LinkedListNode<int> *prev = NULL;
    // LinkedListNode<int> *curr = head;
    // reverse(head, curr, prev);
    // return head;
    // if(head == NULL || head->next == NULL){
    //     return head;
    // }
    // LinkedListNode<int> *prev = NULL;
    // LinkedListNode<int> *curr = head;
    // while(curr!=NULL){
    //     LinkedListNode<int> *forward = curr->next;
    //     curr->next = prev;
    //     prev = curr;
    //     curr = forward; 
    // }
    // return prev;
}
