int getmax(vector<int>&arr,int n){
    int maxi = INT_MIN;
    for(int i=0;i<n;i++){
        maxi = max(maxi , arr[i]);
    }
    return  maxi;
}
int getsum(vector<int>&arr,int n){
    int sum =0;
    for(int i =0;i<n;i++){
        sum += arr[i];
    }
    return sum;
}
int  ispossible(vector<int>&arr,int mid){
    int pageCount=0;
    int n = arr.size();
    int studentCount =1;
    for(int i =0;i<n;i++){
        if(pageCount+arr[i]<=mid){
            pageCount+=arr[i];
        }
        else{
            studentCount ++;
            pageCount = arr[i];
        }
    }
    return studentCount;
}
int findPages(vector<int>& arr, int n, int m) {
    if(n<m){
        return -1;
    }
    int low = getmax(arr,n);
    int high = getsum(arr,n);
    while(low<=high){
        int mid = low+(high-low)/2;
        int studCount = ispossible(arr,mid);
        if(studCount>m){
            low = mid+1;
        }
        else{
            high = mid-1;
        }
    }
    return low;
}
