class Solution {
public:
    void solve(string op,vector<string>&ans,int open,int close){
        if(open==0 && close ==0){
            ans.push_back(op);
            return  ;
        }
        if(open==close){
            string op1 = op;
            op1.push_back('(');
            solve(op1,ans,open-1,close);
        }
        else if(close==0){
            string op1 = op;
            op1.push_back('(');
            solve(op1,ans,open-1,close);
        }
        else if(open==0){
            string op1 = op;
            op1.push_back(')');
            solve(op1,ans,open,close-1);
        }
        else{
            string op1 = op;
            string op2 = op;
            op1.push_back('(');
            op2.push_back(')');
            solve(op1,ans,open-1,close);
            solve(op2,ans,open,close-1);
        }
    }
    vector<string> generateParenthesis(int n) {
        int open = n;
        int close = n;
        vector<string>ans;
        string op="";
        solve(op,ans,open,close);
        return ans;
    }
};
