int solve(int n , vector<int>&arr){
      vector<int>currRow(n+1,0);
      vector<int>nextRow(n+1,0);
    for(int curr=n-1;curr>=0;curr--){
        for(int prev=curr-1;prev>=-1;prev--){
            int include =0;
            if(prev==-1 || arr[curr]>arr[prev]){
            include= 1+nextRow[curr+1];
            }
            int exclude = nextRow[prev+1];
            currRow[prev+1]= max(include,exclude);
        }
        nextRow= currRow;
    }
    return currRow[0];
  }
    // Function to find length of longest increasing subsequence.
    int longestSubsequence(vector<int>& arr) {
    int n = arr.size();
       return solve(n,arr);
    }
