bool solve(vector<int>& arr,int n,int total){
       vector<vector<int>>dp(n+1,vector<int>(total+1,0));
       
       for(int i=0;i<=n;i++){
           dp[i][0]=1;
       }
       for(int index=n-1;index>=0;index--){
           for(int target=0;target<=total/2;target++){
               bool incl=0;
               if(target-arr[index]>=0){
        incl = dp[index+1][target-arr[index]];
               }
        bool exc = dp[index+1][target];
        
        dp[index][target] = incl or exc;
           }
       }
       return dp[0][total/2];
   }
    bool equalPartition(vector<int>& arr) {
        int n = arr.size();
        int total=0;
        for(int i=0;i<n;i++){
            total+=arr[i];
        }
        // odd
        if(total%2!=0){
            return 0;
        }
        int target = total/2;
        return solve(arr,n,total);
    }
