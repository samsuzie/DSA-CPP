public:
   int solve(int n,vector<int>&arr){
       if(n==0){
           return 0;
       }
       vector<int>ans;
       ans.push_back(arr[0]);
       for(int i=1;i<n;i++){
           if(arr[i]>ans.back()){
               ans.push_back(arr[i]);
           }
           else{
            //   find out the index of just bada element 
            int index = lower_bound(ans.begin(),ans.end(),arr[i])-ans.begin();
            ans[index]=arr[i];
           }
       }
       return ans.size();
   }
    // Function to find length of longest increasing subsequence.
    int longestSubsequence(vector<int>& arr) {
        int n = arr.size();
        return solve(n,arr);
    }
